# Generated by Django 4.2.6 on 2023-11-29 19:00

from django.contrib.auth.models import Group, Permission
from django.core.management.sql import emit_post_migrate_signal
from django.db import models, migrations
import logging

logger = logging.getLogger(__name__)

# Shared permissions
view_patient_record = 'view_patient_record'
update_demographic_info = 'update_demographic_info'

public_group_permissions = {
   "Patients": [
        view_patient_record, update_demographic_info
   ],
   "Clinical Staff": [
        view_patient_record, update_demographic_info, 'update_clinical_data', 'view_patient_medical_history', 'update_medical_history', 'can_contact_staff'
   ],
   "IT Staff": [
        'access_system_configuration', 'access_maintenance_tools', 'view_logs'
   ],
   "Administrative Staff": [
        'view_demographic_info', update_demographic_info, 'register_patient', 'view_appointments', 'schedule_appointments'
   ],
   "Doctors": [
        'view_diagnoses', 'update_diagnoses', 'view_treatment_plans', 'update_treatment_plans', 'prescribe_medication', 'can_order_tests', 'document_clinical_notes'
   ],
   "Attending Physicians": [
        'care_plan_approval', 'orders_approval'
   ],
   "Specialists": [
        'prescribe_specialized_medication', 'authorize_device_implantation'
   ],
   "System Administrators": [
        'access_security_settings', 'apply_updates'
   ]
}

def add_group_permissions(apps, schema_editor):
    # See https://code.djangoproject.com/ticket/23422
    db_alias = schema_editor.connection.alias
    try:
        emit_post_migrate_signal(2, False, 'default')
    except TypeError:  # Django < 1.8
        emit_post_migrate_signal([], 2, False, 'default', db_alias)

    for group in public_group_permissions:
        role, created = Group.objects.get_or_create(name=group)
        logger.info(f'{group} Group created')
        for perm in public_group_permissions[group]:
            role.permissions.add(Permission.objects.get(codename=perm))
            logger.info(f'Permitting {group} to {perm}')
        role.save()

class Migration(migrations.Migration):

    dependencies = [
        ('userauth', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(add_group_permissions),
    ]
